@model Posadmin.Models.UsuariosModel
<div id="content">
   <section id="widget-grid" class="">
      <div class="row">

         <!-- NEW COL START -->
         <article class="col-sm-12 col-md-12 col-lg-12">

            <!-- Widget ID (each widget will need unique ID)-->
            <div class="jarviswidget jarviswidget-color-darken" id="wid-id-3"
                 data-widget-editbutton="false"
                 data-widget-deletebutton="false"
                 data-widget-colorbutton="false"
                 data-widget-fullscreenbutton="false"
                 data-widget-collapsed="false"
                 data-widget-sortable="false">

               <header>
                  <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                  <h2>Usuarios</h2>

               </header>

               <!-- widget div-->
               <div>

                  <!-- widget edit box -->
                  <div class="jarviswidget-editbox">
                     <!-- This area used as dropdown edit box -->

                  </div>
                  <!-- end widget edit box -->
                  <!-- widget content -->
                  <div class="widget-body no-padding">
                     @foreach (KeyValuePair<string, ModelState> keyValuePair in ViewData.ModelState)
                     {
                        if (String.IsNullOrEmpty(keyValuePair.Key))
                        {
                           foreach (ModelError modelError in keyValuePair.Value.Errors)
                           {
                           <div class="alert adjusted alert-warning fade in">
                              <button class="close" data-dismiss="alert">
                                 ×
                              </button>
                              <i class="fa fa-fw fa-lg fa-exclamation-triangle"></i>
                              <strong>¡Oh No!</strong> <br />

                              @Html.Raw(HttpUtility.HtmlDecode(modelError.ErrorMessage))
                              <br />
                           </div>
                           }
                        }
                     }

                     @using (Html.BeginForm("UsuariosRegister", "Usuarios", FormMethod.Post, new { @id = "usuarios-search", @name = "usuarios-search", @class = "smart-form", @novalidate = "novalidate" }))
                     {
                     @Html.AntiForgeryToken()
                     <header>
                        @if (Model.Item.Instance == SoftwareFactory.Infrastructure.BusinessEntity.InstanceEntity.Added)
                        { <label>Ingresar Usuarios</label>  }
                        else
                        { <label>Editar Usuarios</label>  }
                     </header>
                     <fieldset>
                        <section class="hidden">
                           @Html.HiddenFor(model => Model.ModoEditar)
                           @Html.HiddenFor(model => Model.Item.Instance)
                           @Html.HiddenFor(model => Model.Item.USUA_Interno)
                        </section>
                        <div class="row">
                           <section class="col col-4">
                              @Html.LabelFor(model => model.Item.ROLE_Interno, new { @class = "label" })
                              <label class="select">
                                 @Html.DropDownListFor(model => model.Item.ROLE_Interno, new SelectList(string.Empty, "Value", "Text"), " < Seleccione Rol > ", new { @id = "ROLE_Interno" })
                                 <b class="tooltip tooltip-top-right"><i class="fa fa-info-circle txt-color-teal"></i> Seleccione un rol</b>
                              </label>
                              <div class="note note-error" style="font-style: normal; font-size: 11px; line-height: 15px; color: #D56161;">@Html.ValidationMessage("ROLE_Interno")</div>
                           </section>
                           <section class="col col-4">
                              @Html.LabelFor(model => model.Item.USUA_Usuario, new { @class = "label" })
                              @if (Model.ModoEditar)
                              {
                              <label class="input">
                                 @Html.EditorFor(model => model.Item.USUA_Usuario, new { htmlAttributes = new { @class = "", type = "text", name = "USUA_Usuario", autocomplete = "off" } })
                                 <b class="tooltip tooltip-top-right"><i class="fa fa-info-circle txt-color-teal"></i> Ingrese un usuario</b>
                              </label>
                              }
                              else
                              {
                              <label class="input">
                                 @Html.HiddenFor(model => Model.Item.USUA_Usuario)
                                 @Html.EditorFor(model => model.Item.USUA_Usuario, new { htmlAttributes = new { @class = "", type = "text", name = "USUA_Usuario", autocomplete = "off", @disabled = "disabled" } })
                                 <b class="tooltip tooltip-top-right"><i class="fa fa-info-circle txt-color-teal"></i> Ingrese un usuario</b>
                              </label>
                              }
                              <div class="note note-error" style="font-style: normal; font-size: 11px; line-height: 15px; color: #D56161;">@Html.ValidationMessage("USUA_Usuario")</div>
                           </section>
                           <section class="col col-4">
                              @Html.LabelFor(model => model.Item.USUA_Contrasena, new { @class = "label" })
                              <label class="input">
                                 @Html.EditorFor(model => model.Item.USUA_Contrasena, new { htmlAttributes = new { @class = "", type = "password", name = "USUA_Contrasena", autocomplete = "off" } })
                                 <b class="tooltip tooltip-top-right"><i class="fa fa-info-circle txt-color-teal"></i> Ingrese un password</b>
                              </label>
                              <div class="note note-error" style="font-style: normal; font-size: 11px; line-height: 15px; color: #D56161;">@Html.ValidationMessage("USUA_Contrasena")</div>
                           </section>
                        </div>
                        <div class="row">
                           <section class="col col-6">
                              @Html.LabelFor(model => model.Item.USUA_NombreCompleto, new { @class = "label" })
                              <label class="input">
                                 @Html.EditorFor(model => model.Item.USUA_NombreCompleto, new { htmlAttributes = new { @class = "", type = "text", name = "USUA_NombreCompleto", autocomplete = "off" } })
                                 <b class="tooltip tooltip-top-right"><i class="fa fa-info-circle txt-color-teal"></i> Ingrese el nombre completo</b>
                              </label>
                              <div class="note note-error" style="font-style: normal; font-size: 11px; line-height: 15px; color: #D56161;">@Html.ValidationMessage("USUA_NombreCompleto")</div>
                           </section>
                           <section class="col col-6">
                              @Html.LabelFor(model => model.Item.USUA_Correo, new { @class = "label" })
                              <label class="input">
                                 @Html.EditorFor(model => model.Item.USUA_Correo, new { htmlAttributes = new { @class = "", type = "email", name = "USUA_Correo", multiple = "true", autocomplete = "off" } })
                                 <b class="tooltip tooltip-top-right"><i class="fa fa-info-circle txt-color-teal"></i> Ingrese un correo</b>
                              </label>
                              <div class="note note-error" style="font-style: normal; font-size: 11px; line-height: 15px; color: #D56161;">@Html.ValidationMessage("USUA_Correo")</div>
                           </section>
                        </div>
                     </fieldset>
                     <footer>
                        <a href='@Url.Action("UsuariosSearch", "Usuarios")' c class="btn btn-labeled btn-default" title="Volver" style="padding-left:10px; padding-right:10px;">
                           <span class="btn-label" style="padding-bottom:0px; padding-top:0px;"><i class="fa fa-undo"></i></span>
                           Volver
                        </a>
                        <button type="submit" class="btn btn-labeled btn-primary" title="Guardar" style="padding-left:10px; padding-right:10px;">
                           <span class="btn-label" style="padding-bottom:0px; padding-top:0px;"><i class="fa fa-save"></i></span>
                           Guardar
                        </button>
                     </footer>
                     if (Model.ModoEditar)
                     {
                      <!-- new widget -->
                     <div class="jarviswidget padding-10" id="wid-id-2" data-widget-togglebutton="false" data-widget-editbutton="false" data-widget-fullscreenbutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false">
                        <header style="margin-left: 0px; margin-right: 0px;">
                           <span class="widget-icon"> <i class="fa fa-lock"></i> </span>
                           <h2>Permisos</h2>

                           <ul class="nav nav-tabs pull-right in" id="myTab">
                              <li class="active">
                                 <a data-toggle="tab" href="#s1" title="Opciones"><i title="Opciones" class="fa fa-bars"></i> Empresas</a>
                              </li>
                           </ul>
                        </header>

                        <!-- widget div-->
                        <div class="no-padding">
                           <!-- widget edit box -->
                           <div class="jarviswidget-editbox">
                              test
                           </div>
                           <!-- end widget edit box -->

                           <div class="widget-body">
                              <!-- content -->
                              <div id="myTabContent" class="tab-content">
                                 <div class="tab-pane fade active in padding-10 no-padding-bottom" id="s1">

                                    <div class="table-responsive">

                                       <table id="dt_opciones" class="table table-striped table-bordered table-hover" width="100%">
                                          <thead>
                                             <tr>
                                                <th class="text-center">@Html.DisplayNameFor(model => Model.Item.USUA_Empresas.FirstOrDefault().EMPR_Activo)</th>
                                                <th class="text-center">@Html.DisplayNameFor(model => Model.Item.USUA_Empresas.FirstOrDefault().EMPR_Id)</th>
                                                <th class="text-center">@Html.DisplayNameFor(model => Model.Item.USUA_Empresas.FirstOrDefault().EMPR_RazonSocial)</th>
                                                <th class="text-center">@Html.DisplayNameFor(model => Model.Item.USUA_Empresas.FirstOrDefault().EMPR_NombreComercial)</th>
                                             </tr>
                                          </thead>
                                          <tbody>
                                             @foreach (var empresa in Model.Item.USUA_Empresas)
                                             {
                                             <tr>
                                                <td>
                                                   <label class="checkbox">
                                                      @Html.EditorFor(modelItem => empresa.EMPR_Activo, new { htmlAttributes = new { @class = "", type = "checkbox", name = "Activo" } })<i></i>&nbsp;
                                                   </label>
                                                   @Html.HiddenFor(modelItem => empresa.EMPR_Interno)
                                                </td>
                                                <td>
                                                   <div style="overflow:hidden;white-space:nowrap;text-overflow:ellipsis;">
                                                      @Html.DisplayFor(modelItem => empresa.EMPR_Id)
                                                   </div>
                                                </td>
                                                <td>
                                                   <div style="overflow:hidden;white-space:nowrap;text-overflow:ellipsis;">
                                                      @Html.DisplayFor(modelItem => empresa.EMPR_RazonSocial)
                                                   </div>
                                                </td>
                                                <td>
                                                   <div style="overflow:hidden;white-space:nowrap;text-overflow:ellipsis;">
                                                      @Html.DisplayFor(modelItem => empresa.EMPR_NombreComercial)
                                                   </div>
                                                </td>
                                             </tr>
                                             }
                                          </tbody>
                                       </table>

                                    </div>

                                 </div>
                                 <!-- end s1 tab pane -->
                              </div>
                           </div>
                           <!-- end content -->
                        </div>

                     </div>
                     }
                     }
                  </div>

                  <!-- end widget content -->

               </div>
               <!-- end widget div -->

            </div>
            <!-- end widget -->

         </article>
         <!-- END COL -->
      </div>
   </section>
</div>

@section pagespecific {
   <script type="text/javascript">

      $(document).ready(function () {

         renderComboRoles($('#ROLE_Interno'), 'Rol', @Model.Item.ROLE_Interno);

         /* BASIC ;*/
         var responsiveHelper_datatable_fixed_column = undefined;
         var responsiveHelper_datatable_col_bars = undefined;
         var responsiveHelper_datatable_tabletools = undefined;

         var breakpointDefinition = {
            tablet: 1024,
            phone: 480
         };

         var responsiveHelper_dt_opciones = undefined;

         $('#dt_opciones').dataTable({
            "sDom": "t" +
               "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
            "autoWidth": true,
            "scrollX": true,
            "paging": false,
            "ordering": false,
            "pageLength": 20,
            "preDrawCallback": function () {
               // Initialize the responsive datatables helper once.
               if (!responsiveHelper_dt_opciones) {
                  responsiveHelper_dt_opciones = new ResponsiveDatatablesHelper($('#dt_opciones'), breakpointDefinition);
               }
            },
            "rowCallback": function (nRow) {
               responsiveHelper_dt_opciones.createExpandIcon(nRow);
            },
            "drawCallback": function (oSettings) {
               responsiveHelper_dt_opciones.respond();
            },
            //"order": [[1, "asc"]],
            "columnDefs": [{ "orderable": false, "targets": 0 }],
            "language": {
               "sProcessing": "Procesando...",
               "sLengthMenu": "Mostrar _MENU_ registros",
               "sZeroRecords": "No se encontraron resultados",
               "sEmptyTable": "Ning&uacute;n dato disponible en esta tabla",
               "sInfo": "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
               "sInfoEmpty": "Mostrando registros del 0 al 0 de un total de 0 registros",
               "sInfoFiltered": "(filtrado de un total de _MAX_ registros)",
               "sInfoPostFix": "",
               "sSearch": "Buscar:",
               "sUrl": "",
               "sInfoThousands": ", ",
               "sLoadingRecords": "Cargando...",
               "oPaginate": {
                  "sFirst": "Primero",
                  "sLast": "&UAcute;ltimo",
                  "sNext": "Siguiente",
                  "sPrevious": "Anterior"
               },
               "oAria": {
                  "sSortAscending": ": Activar para ordenar la columna de manera ascendente",
                  "sSortDescending": ": Activar para ordenar la columna de manera descendente"
               }
            }
         });

      })

   </script>
}
