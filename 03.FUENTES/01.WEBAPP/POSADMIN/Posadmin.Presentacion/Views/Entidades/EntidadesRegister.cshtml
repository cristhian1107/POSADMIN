@model Posadmin.Models.EntidadesModel
<div id="content">
   <section id="widget-grid" class="">
      <div class="row">

         <!-- NEW COL START -->
         <article class="col-sm-12 col-md-12 col-lg-12">

            <!-- Widget ID (each widget will need unique ID)-->
            <div class="jarviswidget jarviswidget-color-darken" id="wid-id-3"
                 data-widget-editbutton="false"
                 data-widget-deletebutton="false"
                 data-widget-colorbutton="false"
                 data-widget-fullscreenbutton="false"
                 data-widget-collapsed="false"
                 data-widget-sortable="false">

               <header>
                  <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                  <h2>Entidades</h2>

               </header>

               <!-- widget div-->
               <div>

                  <!-- widget edit box -->
                  <div class="jarviswidget-editbox">
                     <!-- This area used as dropdown edit box -->

                  </div>
                  <!-- end widget edit box -->
                  <!-- widget content -->
                  <div class="widget-body no-padding">
                     @foreach (KeyValuePair<string, ModelState> keyValuePair in ViewData.ModelState)
                     {
                        if (String.IsNullOrEmpty(keyValuePair.Key))
                        {
                           foreach (ModelError modelError in keyValuePair.Value.Errors)
                           {
                           <div class="alert adjusted alert-warning fade in">
                              <button class="close" data-dismiss="alert">
                                 ×
                              </button>
                              <i class="fa fa-fw fa-lg fa-exclamation-triangle"></i>
                              <strong>¡Oh No!</strong> <br />

                              @Html.Raw(HttpUtility.HtmlDecode(modelError.ErrorMessage))
                              <br />
                           </div>
                           }
                        }
                     }

                     @using (Html.BeginForm("EntidadesRegister", "Entidades", FormMethod.Post, new { @id = "entidades-search", @name = "entidades-search", @class = "smart-form", @novalidate = "novalidate" }))
                     {
                     @Html.AntiForgeryToken()
                     <header>
                        @if (Model.Item.Instance == SoftwareFactory.Infrastructure.BusinessEntity.InstanceEntity.Added)
                        { <label>Ingresar Entidades</label>  }
                        else
                        { <label>Editar Entidades</label>  }
                     </header>
                     <fieldset>
                        <section class="hidden">
                           @Html.HiddenFor(model => Model.Item.Instance)
                           @Html.HiddenFor(model => Model.Item.EMPR_Interno)
                           @Html.HiddenFor(model => Model.Item.ENTI_Interno)
                        </section>
                        <div class="row">
                           <section class="col col-3">
                              @Html.LabelFor(model => model.Item.TABL_InternoTDI, new { @class = "label" })
                              <label class="select">
                                 @{var l_valueTablaTDI = Model.Item.TABL_InternoTDI;}
                                 <input type="hidden" id="HiddenCodigoTablaTDI" value=@l_valueTablaTDI />
                                 @Html.DropDownListFor(model => model.Item.TABL_InternoTDI, new SelectList(string.Empty, "Value", "Text"), " < Seleccione Doc. Identidad > ", new { @id = "TABL_InternoTDI" })
                                 <b class="tooltip tooltip-top-right"><i class="fa fa-info-circle txt-color-teal"></i> Seleccione una documento</b>
                              </label>
                              <div class="note note-error" style="font-style: normal; font-size: 11px; line-height: 15px; color: #D56161;">@Html.ValidationMessage("TABL_InternoTDI")</div>
                           </section>
                           <section class="col col-3">
                              @Html.LabelFor(model => model.Item.ENTI_Id, new { @class = "label" })
                              <label class="input">
                                 @Html.EditorFor(model => model.Item.ENTI_Id, new { htmlAttributes = new { @class = "", type = "text", name = "ENTI_Id", autocomplete = "off" } })
                                 <b class="tooltip tooltip-top-right"><i class="fa fa-info-circle txt-color-teal"></i> Ingrese un id</b>
                              </label>
                              <div class="note note-error" style="font-style: normal; font-size: 11px; line-height: 15px; color: #D56161;">@Html.ValidationMessage("ENTI_Id")</div>
                           </section>
                           <section class="col col-6">
                              @Html.LabelFor(model => model.Item.ENTI_NombreCompleto, new { @class = "label" })
                              <label class="input">
                                 @Html.EditorFor(model => model.Item.ENTI_NombreCompleto, new { htmlAttributes = new { @class = "", type = "text", name = "ENTI_NombreCompleto", autocomplete = "off" } })
                                 <b class="tooltip tooltip-top-right"><i class="fa fa-info-circle txt-color-teal"></i> Ingrese un nombre completo</b>
                              </label>
                              <div class="note note-error" style="font-style: normal; font-size: 11px; line-height: 15px; color: #D56161;">@Html.ValidationMessage("ENTI_NombreCompleto")</div>
                           </section>
                        </div>
                        <div class="row">
                           <section class="col col-6">
                              @Html.LabelFor(model => model.Item.ENTI_Direccion, new { @class = "label" })
                              <label class="input">
                                 @Html.EditorFor(model => model.Item.ENTI_Direccion, new { htmlAttributes = new { @class = "", type = "text", name = "ENTI_Direccion", autocomplete = "off" } })
                                 <b class="tooltip tooltip-top-right"><i class="fa fa-info-circle txt-color-teal"></i> Ingrese una direccion</b>
                              </label>
                              <div class="note note-error" style="font-style: normal; font-size: 11px; line-height: 15px; color: #D56161;">@Html.ValidationMessage("ENTI_Direccion")</div>
                           </section>
                           <section class="col col-3">
                              @Html.LabelFor(model => model.Item.ENTI_Sexo, new { @class = "label" })
                              <label class="select">
                                 @{var l_valueENTI_Sexo = Model.Item.ENTI_Sexo;}
                                 <input type="hidden" id="HiddenCodigoENTI_Sexo" value=@l_valueENTI_Sexo />
                                 @Html.DropDownListFor(model => model.Item.ENTI_Sexo, new SelectList(string.Empty, "Value", "Text"), " < Seleccione Sexo > ", new { @id = "ENTI_Sexo" })
                                 <b class="tooltip tooltip-top-right"><i class="fa fa-info-circle txt-color-teal"></i> Seleccione un sexo</b>
                              </label>
                              <div class="note note-error" style="font-style: normal; font-size: 11px; line-height: 15px; color: #D56161;">@Html.ValidationMessage("ENTI_Sexo")</div>
                           </section>
                           <section class="col col-3">
                              @Html.LabelFor(model => model.Item.PAIS_Interno, new { @class = "label" })
                              <label class="select">
                                 @Html.DropDownListFor(model => model.Item.PAIS_Interno, new SelectList(string.Empty, "Value", "Text"), " < Seleccione Pais > ", new { @id = "PAIS_Interno" })
                                 <b class="tooltip tooltip-top-right"><i class="fa fa-info-circle txt-color-teal"></i> Seleccione un pais</b>
                              </label>
                              <div class="note note-error" style="font-style: normal; font-size: 11px; line-height: 15px; color: #D56161;">@Html.ValidationMessage("PAIS_Interno")</div>
                           </section>
                        </div>
                        <div class="row">
                           <section class="col col-4">
                              @Html.LabelFor(model => model.Item.ENTI_Departamento, new { @class = "label" })
                              <label class="select">
                                 @Html.DropDownListFor(model => model.Item.ENTI_Departamento, new SelectList(string.Empty, "Value", "Text"), " < Seleccione Departamento > ", new { @id = "ENTI_Departamento" })
                              </label>
                              <div class="note note-error" style="font-style: normal; font-size: 11px; line-height: 15px; color: #D56161;">@Html.ValidationMessage("ENTI_Departamento")</div>
                           </section>
                           <section class="col col-4">
                              @Html.LabelFor(model => model.Item.ENTI_Provincia, new { @class = "label" })
                              <label class="select">
                                 @Html.DropDownListFor(model => model.Item.ENTI_Provincia, new SelectList(string.Empty, "Value", "Text"), " < Seleccione Provincia > ", new { @id = "ENTI_Provincia" })
                              </label>
                              <div class="note note-error" style="font-style: normal; font-size: 11px; line-height: 15px; color: #D56161;">@Html.ValidationMessage("ENTI_Provincia")</div>
                           </section>
                           <section class="col col-4">
                              @Html.LabelFor(model => model.Item.ENTI_Distrito, new { @class = "label" })
                              <label class="select">
                                 @Html.DropDownListFor(model => model.Item.ENTI_Distrito, new SelectList(string.Empty, "Value", "Text"), " < Seleccione Distrito > ", new { @id = "ENTI_Distrito" })
                              </label>
                              <div class="note note-error" style="font-style: normal; font-size: 11px; line-height: 15px; color: #D56161;">@Html.ValidationMessage("ENTI_Distrito")</div>
                           </section>
                        </div>
                     </fieldset>
                     <footer>
                        <a href='@Url.Action("EntidadesSearch", "Entidades")' c class="btn btn-labeled btn-default" title="Volver" style="padding-left:10px; padding-right:10px;">
                           <span class="btn-label" style="padding-bottom:0px; padding-top:0px;"><i class="fa fa-undo"></i></span>
                           Volver
                        </a>
                        <button type="submit" class="btn btn-labeled btn-primary" title="Guardar" style="padding-left:10px; padding-right:10px;">
                           <span class="btn-label" style="padding-bottom:0px; padding-top:0px;"><i class="fa fa-save"></i></span>
                           Guardar
                        </button>
                     </footer>

                      <!-- new widget -->
                                 <div class="jarviswidget padding-10" id="wid-id-2" data-widget-togglebutton="false" data-widget-editbutton="false" data-widget-fullscreenbutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false">
                                    <header style="margin-left: 0px; margin-right: 0px;">
                                       <span class="widget-icon"> <i class="fa fa-lock"></i> </span>
                                       <h2>Permisos</h2>

                                       <ul class="nav nav-tabs pull-right in" id="myTab">
                                          <li class="active">
                                             <a data-toggle="tab" href="#s1" title="Opciones"><i title="Opciones" class="fa fa-bars"></i> Tipos</a>
                                          </li>
                                       </ul>
                                    </header>

                                    <!-- widget div-->
                                    <div class="no-padding">
                                       <!-- widget edit box -->
                                       <div class="jarviswidget-editbox">
                                          test
                                       </div>
                                       <!-- end widget edit box -->

                                       <div class="widget-body">
                                          <!-- content -->
                                          <div id="myTabContent" class="tab-content">
                                             <div class="tab-pane fade active in padding-10 no-padding-bottom" id="s1">

                                                <div class="table-responsive">

                                                   <table id="dt_opciones" class="table table-striped table-bordered table-hover" width="100%">
                                                      <thead>
                                                         <tr>
                                                            <th class="text-center">@Html.DisplayNameFor(model => Model.Item.ENTI_FuncionesEntidades.FirstOrDefault().FUNC_Activo)</th>
                                                            <th class="text-center">@Html.DisplayNameFor(model => Model.Item.ENTI_FuncionesEntidades.FirstOrDefault().FUNC_Nombre)</th>
                                                            <th class="text-center">@Html.DisplayNameFor(model => Model.Item.ENTI_FuncionesEntidades.FirstOrDefault().FUNC_Descripcion)</th>
                                                         </tr>
                                                      </thead>
                                                      <tbody>
                                                         @foreach (var tipo in Model.Item.ENTI_FuncionesEntidades)
                                                         {
                                                         <tr>
                                                            <td>
                                                               <label class="checkbox">
                                                                  @Html.EditorFor(modelItem => tipo.FUNC_Activo, new { htmlAttributes = new { @class = "", type = "checkbox", name = "Activo" } })<i></i>&nbsp;
                                                               </label>
                                                               @Html.HiddenFor(modelItem => tipo.TABL_InternoTEN)
                                                            </td>
                                                            <td>
                                                               <div style="overflow:hidden;white-space:nowrap;text-overflow:ellipsis;">
                                                                  @Html.DisplayFor(modelItem => tipo.FUNC_Nombre)
                                                               </div>
                                                            </td>
                                                            <td>
                                                               <div style="overflow:hidden;white-space:nowrap;text-overflow:ellipsis;">
                                                                  @Html.DisplayFor(modelItem => tipo.FUNC_Descripcion)
                                                               </div>
                                                            </td>
                                                         </tr>
                                                         }
                                                      </tbody>
                                                   </table>

                                                </div>

                                             </div>
                                             <!-- end s1 tab pane -->
                                          </div>
                                       </div>
                                       <!-- end content -->
                                    </div>

                                 </div>

                                   }
                  </div>

                  <!-- end widget content -->

               </div>
               <!-- end widget div -->

            </div>
            <!-- end widget -->
         </article>
         <!-- END COL -->
      </div>
   </section>
</div>

@section pagespecific {
   <script type="text/javascript">

      $(document).ready(function () {

         var l_tablaTDI = document.getElementById("HiddenCodigoTablaTDI").value;
         renderComboTablasActivas($('#TABL_InternoTDI'), 'Doc. Identidad', @Model.Item.EMPR_Interno,'TDI', l_tablaTDI );
         var l_entiSexo = document.getElementById("HiddenCodigoENTI_Sexo").value;
         renderComboSexo($('#ENTI_Sexo'), 'Sexo', l_entiSexo );
         renderComboPaises($('#PAIS_Interno'), 'Pais', @Model.Item.PAIS_Interno);
         if(@Model.Item.ENTI_Interno != '0'){
            renderComboUbigeoDepartamento($('#ENTI_Departamento'), 'Departamento',@Model.Item.ENTI_Departamento ,@Model.Item.PAIS_Interno);
            renderComboUbigeoProvincia($('#ENTI_Provincia'), 'Provincia',@Model.Item.ENTI_Departamento, @Model.Item.ENTI_Provincia ,@Model.Item.PAIS_Interno);
            renderComboUbigeoDistrito($('#ENTI_Distrito'), 'Distrito',@Model.Item.ENTI_Provincia, @Model.Item.ENTI_Distrito ,@Model.Item.PAIS_Interno);
         }

         /* BASIC ;*/
         var responsiveHelper_datatable_fixed_column = undefined;
         var responsiveHelper_datatable_col_bars = undefined;
         var responsiveHelper_datatable_tabletools = undefined;

         var breakpointDefinition = {
            tablet: 1024,
            phone: 480
         };

         var responsiveHelper_dt_opciones = undefined;

         $('#dt_opciones').dataTable({
            "sDom": "t" +
               "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
            "autoWidth": true,
            "scrollX": true,
            "paging": false,
            "ordering": false,
            "pageLength": 20,
            "preDrawCallback": function () {
               // Initialize the responsive datatables helper once.
               if (!responsiveHelper_dt_opciones) {
                  responsiveHelper_dt_opciones = new ResponsiveDatatablesHelper($('#dt_opciones'), breakpointDefinition);
               }
            },
            "rowCallback": function (nRow) {
               responsiveHelper_dt_opciones.createExpandIcon(nRow);
            },
            "drawCallback": function (oSettings) {
               responsiveHelper_dt_opciones.respond();
            },
            //"order": [[1, "asc"]],
            "columnDefs": [{ "orderable": false, "targets": 0 }],
            "language": {
               "sProcessing": "Procesando...",
               "sLengthMenu": "Mostrar _MENU_ registros",
               "sZeroRecords": "No se encontraron resultados",
               "sEmptyTable": "Ning&uacute;n dato disponible en esta tabla",
               "sInfo": "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
               "sInfoEmpty": "Mostrando registros del 0 al 0 de un total de 0 registros",
               "sInfoFiltered": "(filtrado de un total de _MAX_ registros)",
               "sInfoPostFix": "",
               "sSearch": "Buscar:",
               "sUrl": "",
               "sInfoThousands": ", ",
               "sLoadingRecords": "Cargando...",
               "oPaginate": {
                  "sFirst": "Primero",
                  "sLast": "&UAcute;ltimo",
                  "sNext": "Siguiente",
                  "sPrevious": "Anterior"
               },
               "oAria": {
                  "sSortAscending": ": Activar para ordenar la columna de manera ascendente",
                  "sSortDescending": ": Activar para ordenar la columna de manera descendente"
               }
            }
         });

      });
      $('#PAIS_Interno').change(function () {
         LoadDepartamentos('0');
         LoadProvincias('0');
         LoadDistritos('0');
      });
      function LoadDepartamentos(codigo) {
         var l_pais = $('#PAIS_Interno').val();
         renderComboUbigeoDepartamento($('#ENTI_Departamento'), 'Departamento',codigo ,l_pais)
      };
      $('#ENTI_Departamento').change(function () {
         LoadProvincias('0');
         LoadDistritos('0');
      });
      function LoadProvincias(codigo) {
         var l_pais = $('#PAIS_Interno').val();
         var l_departamento = $('#ENTI_Departamento').val();
         renderComboUbigeoProvincia($('#ENTI_Provincia'), 'Provincia',l_departamento, codigo ,l_pais)
      };
      $('#ENTI_Provincia').change(function () {
         LoadDistritos('0');
      });
      function LoadDistritos(codigo) {
         var l_pais = $('#PAIS_Interno').val();
         var l_provincia = $('#ENTI_Provincia').val();
         renderComboUbigeoDistrito($('#ENTI_Distrito'), 'Distrito',l_provincia, codigo ,l_pais)
      };

   </script>
}
