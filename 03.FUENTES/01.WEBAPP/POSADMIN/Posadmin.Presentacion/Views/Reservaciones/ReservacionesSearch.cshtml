@model Posadmin.Models.ReservacionesModel
<div id="content">
   <section id="widget-grid" class="">
      <div class="row">

         <!-- NEW COL START -->
         <article class="col-sm-12 col-md-12 col-lg-12">

            <!-- Widget ID (each widget will need unique ID)-->
            <div class="jarviswidget jarviswidget-color-darken" id="wid-id-3"
                 data-widget-editbutton="false"
                 data-widget-deletebutton="false"
                 data-widget-colorbutton="false"
                 data-widget-fullscreenbutton="false"
                 data-widget-collapsed="false"
                 data-widget-sortable="false">

               <header>
                  <span class="widget-icon"> <i class="fa fa-filter"></i> </span>
                  <h2>Filtros</h2>

               </header>

               <!-- widget div-->
               <div>

                  <!-- widget edit box -->
                  <div class="jarviswidget-editbox">
                     <!-- This area used as dropdown edit box -->

                  </div>
                  <!-- end widget edit box -->
                  <!-- widget content -->
                  <div class="widget-body no-padding">
                     @foreach (KeyValuePair<string, ModelState> keyValuePair in ViewData.ModelState)
                     {
                        if (String.IsNullOrEmpty(keyValuePair.Key))
                        {
                           foreach (ModelError modelError in keyValuePair.Value.Errors)
                           {
                           <div class="alert adjusted alert-warning fade in">
                              <button class="close" data-dismiss="alert">
                                 ×
                              </button>
                              <i class="fa fa-fw fa-lg fa-exclamation-triangle"></i>
                              <strong>¡Oh No!</strong> <br />

                              @Html.Raw(HttpUtility.HtmlDecode(modelError.ErrorMessage))
                              <br />
                           </div>
                           }
                        }
                     }

                     @using (Html.BeginForm("ReservacionesSearch", "Reservaciones", FormMethod.Post, new { @id = "reservaciones-search", @name = "reservaciones-search", @class = "smart-form", @novalidate = "novalidate" }))
                     {
                     @Html.AntiForgeryToken()
                     <fieldset>
                        <section class="hidden">
                           @Html.HiddenFor(model => Model.InternoEmpresa)
                           @Html.HiddenFor(model => Model.InternoSucursal)
                        </section>
                        <div class="row">
                           <section class="col col-3">
                              @Html.LabelFor(model => model.FiltroEstado, new { @class = "label" })
                              <label class="select">
                                 @{var l_valueEstado = Model.FiltroEstado;}
                                 <input type="hidden" id="HiddenEstado" value=@l_valueEstado />
                                 @Html.DropDownListFor(model => model.FiltroEstado, new SelectList(string.Empty, "Value", "Text"), " < Seleccione Estado > ", new { @id = "FiltroEstado" })
                                 <b class="tooltip tooltip-top-right"><i class="fa fa-info-circle txt-color-teal"></i> Seleccione un estado</b>
                              </label>
                              <div class="note note-error" style="font-style: normal; font-size: 11px; line-height: 15px; color: #D56161;">@Html.ValidationMessage("FiltroEstado")</div>
                           </section>
                           <section class="col col-3">
                              @Html.LabelFor(model => model.FiltroNumero, new { @class = "label" })
                              <label class="input">
                                 @Html.EditorFor(model => model.FiltroNumero, new { htmlAttributes = new { @class = "", type = "text", name = "FiltroNumero", autocomplete = "on" } })
                                 <b class="tooltip tooltip-top-right"><i class="fa fa-info-circle txt-color-teal"></i> Ingrese un numero de habitacion</b>
                              </label>
                           </section>
                           <section class="col col-6">
                              @Html.LabelFor(model => model.FiltroHuesped, new { @class = "label" })
                              <label class="input">
                                 @Html.EditorFor(model => model.FiltroHuesped, new { htmlAttributes = new { @class = "", type = "text", name = "FiltroHuesped", autocomplete = "on" } })
                                 <b class="tooltip tooltip-top-right"><i class="fa fa-info-circle txt-color-teal"></i> Ingrese un huesped</b>
                              </label>
                           </section>
                        </div>
                     </fieldset>
                     <footer>
                        <button type="submit" class="btn btn-labeled btn-primary" title="Refrescar" style="padding-left:10px; padding-right:10px;">
                           <span class="btn-label" style="padding-bottom:0px; padding-top:0px;"><i class="fa fa-retweet"></i></span>
                           Refrescar
                        </button>
                        <a href='@Url.Action("ReservacionesRegister", "Reservaciones")' class="btn btn-labeled btn-success" title="Nuevo" style="padding-left:10px; padding-right:10px;">
                           <span class="btn-label" style="padding-bottom:0px; padding-top:0px;"><i class="fa fa-plus"></i></span>
                           Nuevo
                        </a>
                     </footer>
                     }
                  </div>

                  <!-- end widget content -->

               </div>
               <!-- end widget div -->

            </div>
            <!-- end widget -->

         </article>
         <!-- END COL -->
         <!-- NEW COL START -->
         <article class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
            <!-- Widget ID (each widget will need unique ID)-->
            <div class="jarviswidget jarviswidget-color-darken" id="result"
                 data-widget-editbutton="false"
                 data-widget-deletebutton="false"
                 data-widget-colorbutton="false"
                 data-widget-collapsed="false"
                 data-widget-togglebutton="false"
                 data-widget-sortable="false">
               <header>
                  <span class="widget-icon"> <i class="fa fa-table"></i> </span>
                  <h2>Resultados</h2>
               </header>
               <!-- widget div-->
               <div>
                  <!-- widget content -->
                  <div class="widget-body no-padding">
                     <table id="dt_basic" class="table table-striped table-bordered table-hover" width="100%">
                        <thead>
                           <tr>
                              @*<th class="text-center" style="white-space:nowrap;">*</th>*@
                              <th class="text-center" style="width:75px; min-width:75px;">*</th>
                              <th class="text-center">Estado</th>
                              <th class="text-center">Habitacion</th>
                              <th class="text-center">Huesped</th>
                              <th class="text-center">Fechas</th>
                              <th class="text-center">Interno</th>
                           </tr>
                        </thead>
                     </table>

                  </div>
                  <!-- end widget content -->

               </div>
               <!-- end widget div -->

            </div>
            <!-- end widget -->

         </article>
         <!-- END COL -->

      </div>

      <!-- MODAL -->
      <div class="modal fade" id="DeleteItem" tabindex="-1" role="dialog">
         <div class="modal-dialog">
            <div class="modal-content">
               <div class="modal-header">
                  <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
                     &times;
                  </button>
                  <h4 class="modal-title">
                     <img src="~/content/img/logo-popup.png" width="150" alt="Posadmin">
                  </h4>
               </div>
               <div class="modal-body no-padding">
                  @using (Html.BeginForm("ReservacionesCancel", "Reservaciones", FormMethod.Post, new { @id = "delete-form", @class = "smart-form", @novalidate = "novalidate" }))
                  {
                  @Html.AntiForgeryToken()
                  <header>
                     &#191;Esta seguro que desea anular la Reserva seleccionado&#63;
                  </header>
                  <fieldset>
                     <section class="hidden">
                        <input type="hidden" name="CancelInternoEmpresa" id="CancelInternoEmpresa" />
                        <input type="hidden" name="CancelInternoSucursal" id="CancelInternoSucursal" />
                        <input type="hidden" name="CancelInterno" id="CancelInterno" />
                     </section>
                  </fieldset>
                  <footer>
                     <button type="button" name="CancelDelete" id="CancelButton" class="btn btn-danger" data-dismiss="modal" aria-hidden="true">
                        No
                     </button>
                     <button type="submit" class="btn btn-success">
                        Si
                     </button>
                  </footer>
                  }
               </div>
            </div>
         </div>
      </div>

   </section>
</div>

@section pagespecific {
   <script type="text/javascript">

      // DO NOT REMOVE : GLOBAL FUNCTIONS!

      $(document).ready(function () {

         var l_estado = document.getElementById("HiddenEstado").value;
         renderComboEstadoReservaciones($('#FiltroEstado'), 'Estado', l_estado);
         /* BASIC ;*/
         var responsiveHelper_dt_basic = undefined;
         var responsiveHelper_datatable_fixed_column = undefined;
         var responsiveHelper_datatable_col_reorder = undefined;
         var responsiveHelper_datatable_tabletools = undefined;

         var breakpointDefinition = {
            tablet: 1024,
            phone: 480
         };

         $('#dt_basic').DataTable(
         {
            "language":
                {
                   "processing": "<div class='overlay custom-loader-background'><i class='fa fa-cog fa-spin custom-loader-color'></i></div>"
                },
            "processing": true,
            "serverSide": true,
            "ajax":
                {
                   "url": "@Url.Action("GetReservacionesSearchData", "Reservaciones")",
                   "type": "POST",
                   "dataType": "JSON"
                },
            "columns": [
                        { "data": "Buttons" },
                        { "data": "RESE_NombreEstado_Display" },
                        { "data": "RESE_HabitacionDescripcion_Display" },
                        { "data": "RESE_HuespedNombreCompleto_Display" },
                        { "data": "RESE_Fechas_Display" },
                        { "data": "RESE_Interno_Display" },
            ],
            "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-6 hidden-xs'T>r>" +
                "t" +
                "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
            "oTableTools": {
               "aButtons": [
               "copy",
               //"csv",
               "xls",
                  //{
                  //    "sExtends": "pdf",
                  //    "sTitle": "SmartAdmin_PDF",
                  //    "sPdfMessage": "SmartAdmin PDF Export",
                  //    "sPdfSize": "letter"
                  //},
                  //{
                  //    "sExtends": "print",
                  //    "sMessage": "Registros <i>(Presiones Esc para salir)</i>"
                  //}
               ],
               "sSwfPath": "/Scripts/plugin/datatables/swf/copy_csv_xls_pdf.swf"
            },
            "preDrawCallback": function () {
               if (!responsiveHelper_dt_basic) {
                  responsiveHelper_dt_basic = new ResponsiveDatatablesHelper($('#dt_basic'), breakpointDefinition);
               }
            },
            "rowCallback": function (nRow) {
               responsiveHelper_dt_basic.createExpandIcon(nRow);
            },
            "drawCallback": function (oSettings) {
               responsiveHelper_dt_basic.respond();
            },
            "autoWidth": true,
            "scrollX": true,
            "pageLength": 20,
            "scrollY": '75vh',
            "scroller": {
               loadingIndicator: true
            },
            "scrollCollapse": true,
            "fixedHeader": true,
            "language": {
               "sProcessing": "Procesando...",
               "sLengthMenu": "Mostrar _MENU_ registros",
               "sZeroRecords": "No se encontraron resultados",
               "sEmptyTable": "Ning&uacute;n dato disponible en esta tabla",
               "sInfo": "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
               "sInfoEmpty": "Mostrando registros del 0 al 0 de un total de 0 registros",
               "sInfoFiltered": "(filtrado de un total de _MAX_ registros)",
               "sInfoPostFix": "",
               //"sSearch": "Buscar:",
               "sUrl": "",
               "sInfoThousands": ", ",
               "sLoadingRecords": "Cargando...",
               "oPaginate": {
                  "sFirst": "Primero",
                  "sLast": "&UAcute;ltimo",
                  "sNext": "Siguiente",
                  "sPrevious": "Anterior"
               },
               "oAria": {
                  "sSortAscending": ": Activar para ordenar la columna de manera ascendente",
                  "sSortDescending": ": Activar para ordenar la columna de manera descendente"
               }
            }
         });
         /* END BASIC */

         $("#CancelButton").click(function (e) {
            $.smallBox({
               title: "Posadmin",
               content: "<i class='fa fa-clock-o'></i> <i>Usted decidio NO anular el item</i>",
               color: "#3276b1",
               iconSmall: "fa fa-times fa-2x fadeInRight animated",
               timeout: 4000
            });
            e.preventDefault();
         })

      });

      function CancelItem(Empresa, Sucursal, Codigo) {
         document.getElementById('CancelInternoEmpresa').value = Empresa;
         document.getElementById('CancelInternoSucursal').value = Sucursal;
         document.getElementById('CancelInterno').value = Codigo;
         $('#DeleteItem').modal("show");
      };

   </script>
}